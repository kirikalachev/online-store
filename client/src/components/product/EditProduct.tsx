'use client';
import { useState } from 'react';
import { Product, Category } from '@/types/product';

interface Props {
  product: Product;
  categories: Category[]; // üÜï –î–æ–±–∞–≤—è–º–µ —Å–ø–∏—Å—ä–∫ —Å –Ω–∞–ª–∏—á–Ω–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  onCancel: () => void;
  onSave: (updatedProduct: Product) => void;
}

export default function EditTab({ product, categories, onCancel, onSave }: Props) {
  const [name, setName] = useState(product.name);
  const [description, setDescription] = useState(product.description);
  const [price, setPrice] = useState(product.price);
  const [selectedCategoryId, setSelectedCategoryId] = useState(product.category.id); // üÜï –†–∞–±–æ—Ç–∏–º —Å ID

  const handleSubmit = () => {
    if (!name.trim() || price <= 0 || !selectedCategoryId) {
      alert("–ú–æ–ª—è, –ø–æ–ø—ä–ª–Ω–µ—Ç–µ –≤—Å–∏—á–∫–∏ –ø–æ–ª–µ—Ç–∞ –∫–æ—Ä–µ–∫—Ç–Ω–æ.");
      return;
    }

    // üß† –ù–∞–º–∏—Ä–∞–º–µ –ø—ä–ª–Ω–∏—è Category –æ–±–µ–∫—Ç –ø–æ ID
    const category = categories.find(cat => cat.id === selectedCategoryId);
    if (!category) {
      alert("–ò–∑–±—Ä–∞–Ω–∞—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –µ –≤–∞–ª–∏–¥–Ω–∞.");
      return;
    }

    const updated: Product = {
      ...product,
      name,
      description,
      price,
      category // üü¢ –ü–æ–¥–∞–≤–∞–º–µ –ø—ä–ª–µ–Ω –æ–±–µ–∫—Ç, –Ω–µ —Å–∞–º–æ ID
    };

    onSave(updated);
  };

  return (
    <div className="bg-white p-4 rounded shadow-md w-full max-w-md">
      <label className="block mb-2">
        –ò–º–µ:
        <input
          className="w-full border px-2 py-1 rounded"
          value={name}
          onChange={e => setName(e.target.value)}
        />
      </label>

      <label className="block mb-2">
        –¶–µ–Ω–∞:
        <input
          className="w-full border px-2 py-1 rounded"
          type="number"
          value={price}
          onChange={e => setPrice(Number(e.target.value))}
        />
      </label>

      <label className="block mb-2">
        –û–ø–∏—Å–∞–Ω–∏–µ:
        <input
          className="w-full border px-2 py-1 rounded"
          value={description}
          onChange={e => setDescription(e.target.value)}
        />
      </label>

      {/* üÜï –°–µ–ª–µ–∫—Ç –∑–∞ –∏–∑–±–æ—Ä –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è */}
      <label className="block mb-4">
        –ö–∞—Ç–µ–≥–æ—Ä–∏—è:
        <select
          className="w-full border px-2 py-1 rounded"
          value={selectedCategoryId}
          onChange={e => setSelectedCategoryId(e.target.value)}
        >
          <option value="">–ò–∑–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è</option>
          {categories.map(cat => (
            <option key={cat.id} value={cat.id}>
              {cat.name}
            </option>
          ))}
        </select>
      </label>

      <div className="flex gap-4">
        <button className="bg-blue-500 text-white px-4 py-2 rounded" onClick={handleSubmit}>
          –ó–∞–ø–∞–∑–∏
        </button>
        <button className="bg-gray-400 text-white px-4 py-2 rounded" onClick={onCancel}>
          –û—Ç–∫–∞–∑
        </button>
      </div>
    </div>
  );
}
